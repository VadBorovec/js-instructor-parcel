{"mappings":"AAOgB,CAAC,EAAG,GAAI,GAAI,GAAI,IAUVA,QAAO,CAACC,EAAKC,IAAWD,EAAMC,GAAQ,GAoBxCC,OAAOC,OANZ,CACbC,MAAO,IACPC,KAAM,GACNC,KAAM,MAGkCP,QACxC,CAACQ,EAAOC,IAAUD,EAAQC,GAC1B,GASc,CACd,CAAEC,GAAI,WAAYC,KAAM,QAASC,WAAY,IAAKC,QAAQ,GAC1D,CAAEH,GAAI,WAAYC,KAAM,OAAQC,WAAY,IAAKC,QAAQ,GACzD,CAAEH,GAAI,WAAYC,KAAM,OAAQC,WAAY,IAAKC,QAAQ,GACzD,CAAEH,GAAI,WAAYC,KAAM,OAAQC,WAAY,IAAKC,QAAQ,GACzD,CAAEH,GAAI,WAAYC,KAAM,UAAWC,WAAY,GAAIC,QAAQ,IAG7Bb,QAC9B,CAACc,GAAWF,WAAEA,KAAiBE,EAAYF,GAC3C,GASW,CACX,CAAEG,MAAO,SAAUC,MAAO,IAAKC,SAAU,GACzC,CAAEF,MAAO,UAAWC,MAAO,IAAKC,SAAU,GAC1C,CAAEF,MAAO,SAAUC,MAAO,GAAIC,SAAU,IAGjBjB,QACvB,CAACkB,GAAOF,MAAEA,EAAKC,SAAEA,KAAeC,EAAQF,EAAQC,GAChD,GASa,CACb,CAAEP,GAAI,MAAOS,MAAO,EAAGC,KAAM,CAAC,KAAM,WACpC,CAAEV,GAAI,MAAOS,MAAO,EAAGC,KAAM,CAAC,OAAQ,QACtC,CAAEV,GAAI,MAAOS,MAAO,GAAIC,KAAM,CAAC,OAAQ,KAAM,WAC7C,CAAEV,GAAI,MAAOS,MAAO,EAAGC,KAAM,CAAC,MAAO,UACrC,CAAEV,GAAI,MAAOS,MAAO,EAAGC,KAAM,CAAC,KAAM,SAAU,WASzBpB,QAAO,CAACC,GAAKmB,KAAEA,KAAW,IAAInB,KAAQmB,IAAO,IAkD1CpB,QACxB,CAACC,EAAKoB,KAAS,IACVpB,EACHoB,CAACA,GAAMpB,EAAIoB,GAAOpB,EAAIoB,GAAO,EAAI,KAEnC","sources":["src/materials/08-iterating-array-mathods/06-reduce.js"],"sourcesContent":["// // refactor\n\n// Array.prototype reduce( )\n// - Поэлементо перебирает оригинальный массив\n// - Возвращает что угодно\n// - Заменяет всё на свете, но использовать нужно с умом\n\nconst numbers = [5, 10, 15, 20, 25];\n\n// const total = numbers.reduce((acc, number) => {\n//   console.log('number', number);\n//   console.log('acc', acc);\n\n//   return acc + number;\n// }, 0);\n\n// // refactor\nconst total = numbers.reduce((acc, number) => acc + number, 0);\n\n// console.log(total);\n\n// accumulator = 0 -> number = 5 -> return 0 + 5\n// accumulator = 5 -> number = 10 -> return 5 + 10\n// accumulator - 15 -> number = 15 -> return 15 + 15\n// accumulator = 30 -> number = 20 -> return 30 + 20\n// accumulator = 50 -> number = 25 -> return 50 + 25\n\n// ==================================================================================\n\n// Count SUM salary\n\nconst salary = {\n  mango: 100,\n  poly: 50,\n  ajax: 150,\n};\n\nconst totalSalary = Object.values(salary).reduce(\n  (total, value) => total + value,\n  0\n);\n\n// console.log('totalSalary: ', totalSalary);\n\n// ==================================================================================\n\n// Count SUM timePlayed\n\nconst players = [\n  { id: 'player-1', name: 'Mango', timePlayed: 310, online: false },\n  { id: 'player-2', name: 'Poly', timePlayed: 470, online: true },\n  { id: 'player-3', name: 'Kiwi', timePlayed: 230, online: true },\n  { id: 'player-4', name: 'Ajax', timePlayed: 150, online: false },\n  { id: 'player-5', name: 'Chelsey', timePlayed: 80, online: true },\n];\n\nconst totalTimePlayed = players.reduce(\n  (totalTime, { timePlayed }) => totalTime + timePlayed,\n  0\n);\n\n// console.log('totalTimePlayed: ', totalTimePlayed);\n\n// ==================================================================================\n\n// Count SUM goods in cart\n\nconst cart = [\n  { label: 'Apples', price: 100, quantity: 2 },\n  { label: 'Bananas', price: 120, quantity: 3 },\n  { label: 'Lemons', price: 70, quantity: 4 },\n];\n\nconst totalAmount = cart.reduce(\n  (total, { price, quantity }) => total + price * quantity,\n  0\n);\n\n// console.log('totalAmount: ', totalAmount);\n\n// ==================================================================================\n\n// Count SUM all tags from tweets\n\nconst tweets = [\n  { id: '000', likes: 5, tags: ['js', 'nodejs'] },\n  { id: '001', likes: 2, tags: ['html', 'css'] },\n  { id: '002', likes: 17, tags: ['html', 'js', 'nodejs'] },\n  { id: '003', likes: 8, tags: ['css', 'react'] },\n  { id: '004', likes: 0, tags: ['js', 'nodejs', 'react'] },\n];\n\n// const allTags = tweets.reduce((acc, tweet) => {\n//   acc.push(...tweet.tags);\n//   return acc;\n// }, []);\n\n// // refactor\nconst allTags = tweets.reduce((acc, { tags }) => [...acc, ...tags], []);\n\n// acc = [], tweet.tags = ['js', 'nodejs' ] return [...[]. ...['js', 'nodejs']]\n// acc = ['js', 'nodejs'] tweet.tags ['html', 'css'] return [...['js', 'nodejs'], ...['html'. 'css' ]]\n// acc = ['js', 'nodejs', 'html', 'css'] ...\n\n// console.log(allTags);\n// console.table(allTags);\n\n// ==================================================================================\n\n// Count tag statistics\n\n// const tagsStats = allTags.reduce((acc, tag) => {\n//   //   console.log(acc);\n//   if (acc[tag]) {\n//     acc[tag] += 1;\n\n//     return acc;\n//   }\n//   acc[tag] = 1;\n\n//   return acc;\n// }, {});\n\n// // refactor\n// const tagsStats = allTags.reduce((acc, tag) => {\n//   if (acc[tag]) {\n//     // acc[tag] += 1;\n//     return {\n//       ...acc,\n//       [tag]: acc[tag] + 1,\n//     };\n//   }\n//   //   acc[tag] = 1;\n//   return {\n//     ...acc,\n//     [tag]: 1,\n//   };\n// }, {});\n\n// // refactor 2\n// const tagsStats = allTags.reduce((acc, tag) => {\n//   return {\n//     ...acc,\n//     [tag]: acc[tag] ? acc[tag] + 1 : 1,\n//   };\n// }, {});\n\n// // refactor 3\nconst tagsStats = allTags.reduce(\n  (acc, tag) => ({\n    ...acc,\n    [tag]: acc[tag] ? acc[tag] + 1 : 1,\n  }),\n  {}\n);\n\n// // OR refactor 3\n// const tagsStats = allTags.reduce(\n//   (acc, tag) =>\n//     acc[tag] ? { ...acc, [tag]: acc[tag] + 1 } : { ...acc, [tag]: 1 },\n//   {}\n// );\n\n// console.log('tagsStats: ', tagsStats);\n"],"names":["reduce","acc","number","Object","values","mango","poly","ajax","total1","value","id","name","timePlayed","online","totalTime","label","price","quantity","total2","likes","tags","tag"],"version":3,"file":"!08-iterating-array-mathods.5ba49f37.js.map"}