{"mappings":"AAIgD,MAA1CA,EAAU,CAAC,EAAG,GAAI,GAAI,GAAI,IAY1BC,GAVSD,EAAQE,MAAKC,GAAUA,EAAS,KAC/BH,EAAQE,MAAKE,GAAqB,KAAXA,IACvBJ,EAAQE,MAAKG,GAAqB,IAAXA,IAQvB,CACd,CAAEC,GAAI,WAAYC,KAAM,QAASC,WAAY,IAAKC,OAAQ,GAAIC,QAAQ,GACtE,CAAEJ,GAAI,WAAYC,KAAM,OAAQC,WAAY,IAAKC,OAAQ,GAAIC,QAAQ,GACrE,CAAEJ,GAAI,WAAYC,KAAM,OAAQC,WAAY,IAAKC,OAAQ,GAAIC,QAAQ,GACrE,CAAEJ,GAAI,WAAYC,KAAM,OAAQC,WAAY,IAAKC,OAAQ,GAAIC,QAAQ,GACrE,CAAEJ,GAAI,WAAYC,KAAM,SAAUC,WAAY,IAAKC,OAAQ,GAAIC,QAAQ,KAGzEC,QAAQC,MAAMX,GAQOA,EAAQC,MAAK,EAACI,GAAEA,KALd,aAKuBA,IAQvBL,EAAQC,MAAK,EAACK,KAAEA,KAFd,SAEyBA","sources":["src/materials/08-iterating-array-mathods/04-find.js"],"sourcesContent":["// Array.prototype.find()\n// - Поэлементо перебирает оригинальный массив\n// - Возвращает первый элемент удовлетворяющий условию или undefined\n\nconst numbers = [5, 10, 15, 20, 25];\n\nconst number = numbers.find(number => number > 10);\nconst number2 = numbers.find(number => number === 10);\nconst number3 = numbers.find(number => number === 9);\n\n// console.log(number);\n// console.log(number2);\n// console.log(number3);\n\n// ==================================================================\n\nconst players = [\n  { id: 'player-1', name: 'Mango', timePlayed: 310, points: 54, online: false },\n  { id: 'player-2', name: 'Poly', timePlayed: 470, points: 92, online: true },\n  { id: 'player-3', name: 'Kiwi', timePlayed: 230, points: 48, online: true },\n  { id: 'player-4', name: 'Ajax', timePlayed: 150, points: 71, online: false },\n  { id: 'player-5', name: 'Chelsy', timePlayed: 280, points: 48, online: true },\n];\n\nconsole.table(players);\n// Ищем игрока по id\n\nconst playerIdToFind = 'player-3';\n\n// const playerWithId = players.find(player => player.id === playerIdToFind);\n\n// // refactor\nconst playerWithId = players.find(({ id }) => id === playerIdToFind);\n\n// console.table(playerWithId);\n\n// Ищем игрока по имени\n\nconst playerNameToFind = 'Poly';\n\nconst playerWithName = players.find(({ name }) => name === playerNameToFind);\n// console.table(playerWithName);\n\n// //  Умовна задача знайти користувача по ID\n\n// const findPlayerById = (allPlayers, playerId) => {\n//   return allPlayers.find(player => player.id === playerId);\n// };\n\n// // refactor\nconst findPlayerById = (allPlayers, playerId) =>\n  allPlayers.find(({ id }) => id === playerId);\n\n// console.log(findPlayerById(players, 'player-1'));\n// console.log(findPlayerById(players, 'player-4'));\n"],"names":["$265c8373f9a72de8$var$numbers","$265c8373f9a72de8$var$players","find","number1","number4","number5","id","name","timePlayed","points","online","console","table"],"version":3,"file":"!08-iterating-array-mathods.af037467.js.map"}