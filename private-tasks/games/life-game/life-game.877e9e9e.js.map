{"mappings":"AACA,MAAMA,KAAO,GACPC,KAAO,GACPC,UAAY,GACZC,MAAQ,IAGRC,OAASC,SAASC,eAAe,UACvCF,OAAOG,MAAQN,IACfG,OAAOI,OAASR,IAChB,MAAMS,IAAML,OAAOM,WAAW,MAG9B,IAAIC,KAAO,GACX,IAAK,IAAIC,EAAM,EAAGA,EAbL,GAaiBA,IAAO,CACnCD,KAAKC,GAAO,GACZ,IAAK,IAAIC,EAAM,EAAGA,EAdP,GAcmBA,IAC5BF,KAAKC,GAAKC,GAAOC,KAAKC,MAAsB,EAAhBD,KAAKE,S,CAKrC,SAASC,WACPR,IAAIS,UAAU,EAAG,EAAGd,OAAOG,MAAOH,OAAOI,QACzC,IAAK,IAAIW,EAAM,EAAGA,EAvBP,GAuBmBA,IAC5B,IAAK,IAAIN,EAAM,EAAGA,EAvBT,GAuBqBA,IACL,IAAnBF,KAAKQ,GAAKN,KACZJ,IAAIW,UAAY,OAChBX,IAAIY,SAzBM,GAyBGR,EAzBH,GAyBoBM,EAzBpB,O,CAgClB,SAASG,aACP,IAAIC,EAAU,GACd,IAAK,IAAIC,EAAM,EAAGA,EApCP,GAoCmBA,IAAO,CACnCD,EAAQC,GAAO,GACf,IAAK,IAAIX,EAAM,EAAGA,EArCT,GAqCqBA,IAAO,CACnC,IAAIY,EAAY,EAChB,IAAK,IAAIC,GAAI,EAAIA,GAAK,EAAGA,IACvB,IAAK,IAAIC,GAAI,EAAIA,GAAK,EAAGA,IAAK,CAC5B,GAAU,IAAND,GAAiB,IAANC,EACb,SAEF,IAAIC,EAAIJ,EAAME,EACVG,EAAIhB,EAAMc,EACVC,EAAI,EACNA,EAAI5B,GACK4B,GAjDR,KAkDDA,EAAI,GAEFC,EAAI,EACNA,EAAI5B,GACK4B,GArDR,KAsDDA,EAAI,GAENJ,GAAad,KAAKiB,GAAGC,E,CAGF,IAAnBlB,KAAKa,GAAKX,KAAeY,EAAY,GAAKA,EAAY,GACxDF,EAAQC,GAAKX,GAAO,EACQ,IAAnBF,KAAKa,GAAKX,IAA4B,IAAdY,EACjCF,EAAQC,GAAKX,GAAO,EAEpBU,EAAQC,GAAKX,GAAOF,KAAKa,GAAKX,E,EAIpCF,KAAOY,C,CAITO,aAAY,KACVR,aACAL,UAAU,GAxEE","sources":["src/private-tasks/games/life-game/life-game.js"],"sourcesContent":["// Constants\nconst ROWS = 50;\nconst COLS = 50;\nconst CELL_SIZE = 10;\nconst SPEED = 100;\n\n// Create canvas\nconst canvas = document.getElementById('canvas');\ncanvas.width = COLS * CELL_SIZE;\ncanvas.height = ROWS * CELL_SIZE;\nconst ctx = canvas.getContext('2d');\n\n// Initialize grid\nlet grid = [];\nfor (let row = 0; row < ROWS; row++) {\n  grid[row] = [];\n  for (let col = 0; col < COLS; col++) {\n    grid[row][col] = Math.floor(Math.random() * 2);\n  }\n}\n\n// Draw grid\nfunction drawGrid() {\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  for (let row = 0; row < ROWS; row++) {\n    for (let col = 0; col < COLS; col++) {\n      if (grid[row][col] === 1) {\n        ctx.fillStyle = '#333';\n        ctx.fillRect(col * CELL_SIZE, row * CELL_SIZE, CELL_SIZE, CELL_SIZE);\n      }\n    }\n  }\n}\n\n// Update grid\nfunction updateGrid() {\n  let newGrid = [];\n  for (let row = 0; row < ROWS; row++) {\n    newGrid[row] = [];\n    for (let col = 0; col < COLS; col++) {\n      let neighbors = 0;\n      for (let i = -1; i <= 1; i++) {\n        for (let j = -1; j <= 1; j++) {\n          if (i === 0 && j === 0) {\n            continue;\n          }\n          let r = row + i;\n          let c = col + j;\n          if (r < 0) {\n            r = ROWS - 1;\n          } else if (r >= ROWS) {\n            r = 0;\n          }\n          if (c < 0) {\n            c = COLS - 1;\n          } else if (c >= COLS) {\n            c = 0;\n          }\n          neighbors += grid[r][c];\n        }\n      }\n      if (grid[row][col] === 1 && (neighbors < 2 || neighbors > 3)) {\n        newGrid[row][col] = 0;\n      } else if (grid[row][col] === 0 && neighbors === 3) {\n        newGrid[row][col] = 1;\n      } else {\n        newGrid[row][col] = grid[row][col];\n      }\n    }\n  }\n  grid = newGrid;\n}\n\n// Start animation loop\nsetInterval(() => {\n  updateGrid();\n  drawGrid();\n}, SPEED);\n"],"names":["ROWS","COLS","CELL_SIZE","SPEED","canvas","document","getElementById","width","height","ctx","getContext","grid","row","col","Math","floor","random","drawGrid","clearRect","row1","fillStyle","fillRect","updateGrid","newGrid","row2","neighbors","i","j","r","c","setInterval"],"version":3,"file":"life-game.877e9e9e.js.map"}